name: Deploy DocuScan Pro

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  NODE_VERSION: '18.x'

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    
    - name: Install dependencies
      run: |
        npm install
        cd backend && npm install && cd ..
    
    - name: Run tests
      run: |
        npm run lint
        # Adicione seus testes aqui quando dispon√≠veis

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    
    - name: Install dependencies
      run: |
        npm install
        cd backend && npm install --production && cd ..
    
    - name: Build frontend
      run: npm run build
    
    - name: Run deploy script
      run: chmod +x deploy.sh && ./deploy.sh
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: docuscan-pro-build
        path: |
          dist/
          backend/
          ecosystem.config.js
          docker-compose.yml
          DEPLOY.md
        retention-days: 30

  deploy-docker:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: docuscan-pro-build
        path: .
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build and push Docker images
      uses: docker/build-push-action@v5
      with:
        context: .
        push: false
        tags: docuscan-pro:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

  deploy-vercel:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: docuscan-pro-build
        path: .
    
    - name: Deploy to Vercel
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        working-directory: ./
        vercel-args: '--prod'
